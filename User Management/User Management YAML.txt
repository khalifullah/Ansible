---
- name: Manage Users
  hosts: all
  become: yes
  tasks:
    - name: Create a new user  # Replace 'newuser' with the desired username
      user:
        name: newuser  # Replace 'newuser' with the actual username
        state: present
        groups: wheel  # Modify the group as needed
        shell: /bin/bash  # Set the user's shell
        password: "{{ 'password123' | password_hash('sha512') }}"  # Securely set user password

    - name: Delete a user  # Replace 'olduser' with the username to remove
      user:
        name: olduser  # Replace 'olduser' with the actual username to delete
        state: absent

    - name: Update an existing user  # Replace 'existinguser' with the username to update
      user:
        name: existinguser
        shell: /bin/zsh  # Change the user's shell
        groups: admin  # Update the user's groups

    - name: Lock a user account  # Replace 'lockeduser' with the username to lock
      user:
        name: lockeduser
        state: locked  # Lock the user account

    - name: Unlock a user account  # Replace 'unlockeduser' with the username to unlock
      user:
        name: unlockeduser
        state: present  # Ensure the user is present and unlocked

    - name: Add a user to multiple groups  # Replace 'multiuser' with the desired username
      user:
        name: multiuser
        state: present
        groups: "group1,group2"  # Add the user to multiple groups

    - name: Change a user's home directory  # Replace 'user' with the target username
      user:
        name: user
        home: /home/newhome  # New home directory
        state: present

    - name: Create a user with SSH key  # Replace 'sshuser' with the desired username
      user:
        name: sshuser
        state: present
        ssh_key: "{{ lookup('file', 'path/to/ssh_key.pub') }}"  # Path to the public SSH key

    - name: Remove a userâ€™s SSH key  # Replace 'sshuser' and 'key' with actual values
      authorized_key:
        user: sshuser
        state: absent
        key: "{{ lookup('file', 'path/to/ssh_key.pub') }}"  # Path to the public SSH key

    - name: Ensure a user has specific SSH authorized keys  # Replace 'anotheruser' with the desired username
      authorized_key:
        user: anotheruser
        key: "{{ lookup('file', 'path/to/another_key.pub') }}"  # Path to the public SSH key
        state: present
